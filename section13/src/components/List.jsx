import "./List.css";
import TodoItem from "./TodoItem";
import { useState, useMemo } from "react";

const List = ({ todos, onupdate, ondelete }) => {
  // state
  const [input, setInput] = useState("");
  const onSetInput = (e) => {
    setInput(e.target.value);
  };

  //ÏõêÌïòÎäîÍ≤ÄÏÉâÏñ¥ ÎßûÎäî ÌïÑÌÑ∞ÎßÅÏùÑ ÌïòÎäî Ìï®Ïàò
  const getFilterTodos = () => {
    if (input === "") {
      return todos;
    }
    return todos.filter((todo) => {
      return todo.content.toLowerCase().includes(input.toLowerCase());
    });
  };
  const filterTodos = getFilterTodos();

  // ÎûúÎçîÎßÅ Î∞úÏÉùÌï†Îïå ÎßàÎã§ Ïó∞ÏÇ∞ÎêòÎäî Ìï®Ïàò(Î¶¨Ïä§Ìä∏ Ï†ÑÏ≤¥ Í∞úÏàò, isDone T/F Í∞úÏàò)
  // * useEffect(()=>{},[]);  -> 1. ÎßàÏö¥Ìä∏Í∞Ä Îê† Îïå / 2. [] ÏïàÏùò Ïù∏ÏàòÏùò Í∞íÏù¥ Î∞îÎÄî Îïå(update Îê† Îïå)
  //   „Ñ¥ Îã®, ÏΩúÎ∞±Ìï®ÏàòÏùò return Í∞íÏù¥ ÏóÜÎäî hooks Ïù¥Îã§
  //   „Ñ¥ useMemo() -> ÏúÑÏùò Í≤ÉÏóê ÏΩúÎ∞±Ìï®ÏàòÏùò return Í∞íÏù¥ ÏûàÎäî hooks Ïù¥Îã§!

  // const getAnalyzeData = () => {
  //   console.log(`getAnalyzeData totalCount ${todos.length}`);
  //   const totalCount = todos.length;
  //   const doneCount = todos.filter((e) => {
  //     return e.isDone === true;
  //   }).length;
  //   const notDoneCount = totalCount - doneCount;

  //   return { totalCount, doneCount, notDoneCount };
  // };
  // const { totalCount, doneCount, notDoneCount } = getAnalyzeData();

  // getAnalyzeData : todos Í∞Ä ÎûúÎçîÎßÅ Îê†Îïå ÎèÑ ÏûëÎèôÌïòÏßÄÎßå,
  // Í≤ÄÏÉâÌï†ÎïåÎèÑ ÏïÑÎ¨¥ Í¥ÄÍ≥Ñ ÏóÜÏßÄÎßå ÌïÑÏöîÏóÜÎäî Ïó∞ÏÇ∞ÏùÑ Ìï®
  const { totalCount, doneCount, notDoneCount } = useMemo(() => {
    console.log(`getAnalyzeData totalCount ${todos.length}`);
    const totalCount = todos.length;
    const doneCount = todos.filter((e) => {
      return e.isDone === true;
    }).length;
    const notDoneCount = totalCount - doneCount;

    return { totalCount, doneCount, notDoneCount };
  }, [todos]);

  return (
    <>
      <div className="List">
        <h2>Todo List üê±‚Äçüêâ</h2>
        <div>
          <span>TOTAL : {totalCount}</span>
          <br />
          <span>DONE : {doneCount}</span>
          <br />
          <span>NOT DONE: {notDoneCount}</span>
        </div>
        <input
          value={input}
          placeholder="Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî"
          onChange={onSetInput}
        />
        <div>
          {filterTodos.map((todo) => (
            <TodoItem
              key={todo.id}
              {...todo}
              onupdate={onupdate}
              ondelete={ondelete}
            />
          ))}
        </div>
      </div>
    </>
  );
};

export default List;
